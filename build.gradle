plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.8'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'war'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

bootWar {
	mainClass = 'com.example.nefandesu'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'
	providedCompile 'jakarta.servlet:jakarta.servlet-api:5.0.0'
	// MySQL
	implementation 'mysql:mysql-connector-java:5.1.45'
	// MariaDB
	implementation 'org.mariadb.jdbc:mariadb-java-client:2.6.2'
	implementation 'mysql:mysql-connector-java'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.compilerArgs << '-parameters'
}

def frontendDir = "$projectDir/src/main/frontend"

task buildReact(type: Exec) {
	workingDir 'path/to/react'
	commandLine 'npm', 'run', 'build'
}

task copyReactBuild(type: Copy) {
	from 'path/to/react/build'
	into 'path/to/springboot/static'
}

build.dependsOn(copyReactBuild)
copyReactBuild.dependsOn(buildReact)